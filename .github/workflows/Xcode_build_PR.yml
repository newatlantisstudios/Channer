# File: .github/workflows/pr.yml
name: Xcode Build on PR

on:
  pull_request:

jobs:
  build:
    runs-on: [self-hosted, macstudio]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo /usr/bin/xcode-select -s /Applications/Xcode.app

      - name: Run Xcode Build
        id: build
        continue-on-error: true
        run: |
          # ‚îÄ‚îÄ (Optional) If you‚Äôre using CocoaPods:
          # bundle install
          # pod install

          # ‚îÄ‚îÄ Run the build (at repo root, because Channer.xcodeproj lives here) ‚îÄ‚îÄ
          set +e
          xcodebuild \
            -project Channer.xcodeproj \
            -scheme Channer \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 16' \
            build -verbose > full.log 2>&1
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          set -e

          # ‚îÄ‚îÄ Extract only actual errors ‚îÄ‚îÄ
          grep -iE 'error:|fatal error:|Undefined symbols|CompileSwiftSources' full.log > errors.log || true

      - name: Upload error log artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-errors
          path: errors.log
          if-no-files-found: warn
          retention-days: 7

      - name: Post error log to PR
        if: steps.build.outputs.exit_code != '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ ! -s errors.log ]; then
            ERRORS="‚ö†Ô∏è Build failed, but no clear errors were found."
          else
            ERRORS=$(sed 's/`/\\`/g' errors.log)
          fi

          {
            echo "üö® **Xcode Build Failed** on \`${{ github.head_ref }}\`"
            echo ""
            echo "<details><summary>Error log</summary>"
            echo ""
            echo '```log'
            echo "$ERRORS"
            echo '```'
            echo "</details>"
          } > comment.txt

          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat comment.txt)"

      - name: Fail the job if build failed
        if: steps.build.outputs.exit_code != '0'
        run: exit 1
